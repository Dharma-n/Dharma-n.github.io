<!DOCTYPE html>
<html lang='#{I18n.locale}'></html>
<head>
<meta charset='utf-8'>
<meta content='IE=edge,chrome=1' http-equiv='X-UA-Compatible'>
<title></title>
<meta content='' name='description'>
<meta content='' name='author'>
<meta content='width=device-width, initial-scale=1.0' name='viewport'>
<link href="/stylesheets/bootstrap.min.css" media="screen" rel="stylesheet" type="text/css" />
<link href="/stylesheets/custom.css" media="screen" rel="stylesheet" type="text/css" />
</head>
<body>
<div class='container'>
<div class='navbar navbar-fixed-top'>
<div class='navbar-inner'>
<div class='container'>
<a class='btn btn-navbar' data-target='.nav-collapse' data-toggle='collapse'>
<span class='icon-bar'></span>
<span class='icon-bar'></span>
<span class='icon-bar'></span>
</a>
<img class='pull-left' src='/img/logo/40x40.png'>
<a class='brand' href='/'>dharma-n.io</a>
<ul class='nav pull-right'>
<li>
<a href='/'>
<i class='icon-home'></i>
</a>
</li>
<li>
<a href='/blogs.html'>
<i class='icon-pencil'></i>
</a>
</li>
<li class='dropdown' id='preview-menu'>
<a class='dropdown-toggle' data-toggle='dropdown' href='#'>
<i class='icon-globe'></i>
</a>
<ul class='dropdown-menu'>
<li>
<a href='/ja/feed.xml'>> 日本語</a>
</li>
<li>
<a href='/cn/feed.xml'>> 简体中文</a>
</li>
<li>
<a href='/feed.xml'>> English</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
<h1></h1>
<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-01-12T00:41:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Middleman 教程</title>
    <link rel="alternate" href="/cn/2014/01/12/middleman-tutorial.html"/>
    <id>/cn/2014/01/12/middleman-tutorial.html</id>
    <published>2014-01-12T00:41:00Z</published>
    <updated>2014-01-12T00:41:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;h4 id="middleman"&gt;- 什么是Middleman&lt;/h4&gt;
&lt;p&gt;Middleman 是一个用来生成静态页面的生成器，通过在本地渲染/source里面的内容，生成/build. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source
    &lt;ul&gt;
      &lt;li&gt;源代码，以及部分逻辑&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Build
    &lt;ul&gt;
      &lt;li&gt;静态html&lt;/li&gt;
      &lt;li&gt;(/Build里面的内容永远不用修改)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="github-page"&gt;- Github Page&lt;/h4&gt;
&lt;p&gt;Github支持hosting静态页面，并且显示在&amp;lt; xxxx &amp;gt;.github.io这个二级域名下。 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所以&lt;/strong&gt;, ...&lt;/p&gt;</summary>
    <content type="html">&lt;h4 id="middleman"&gt;- 什么是Middleman&lt;/h4&gt;
&lt;p&gt;Middleman 是一个用来生成静态页面的生成器，通过在本地渲染/source里面的内容，生成/build. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source
    &lt;ul&gt;
      &lt;li&gt;源代码，以及部分逻辑&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Build
    &lt;ul&gt;
      &lt;li&gt;静态html&lt;/li&gt;
      &lt;li&gt;(/Build里面的内容永远不用修改)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="github-page"&gt;- Github Page&lt;/h4&gt;
&lt;p&gt;Github支持hosting静态页面，并且显示在&amp;lt; xxxx &amp;gt;.github.io这个二级域名下。 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所以&lt;/strong&gt;, 用Middleman来生成github pages是一个非常好的选择。&lt;/p&gt;

&lt;h4 id="middleman--github--jekyll-"&gt;- 为什么是Middleman 而不是 Github 官方推荐的 Jekyll ?&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Jekyll只支持单语言&lt;/li&gt;
  &lt;li&gt;Jekyll的Blog Engine不可扩展&lt;/li&gt;
  &lt;li&gt;Jekyll不支持HAML&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="github-blogging"&gt;- 设置Github Blogging的环境&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;安装bundler  &lt;code&gt;sudo gem install bundler&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;浏览到想要放置blog文件的文件夹&lt;/li&gt;
  &lt;li&gt;从repo下载源代码 &lt;code&gt;git clone https://github.com/nekokami/teampage-source.git&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;下载完了之后会出现一个叫做”teampage-source”的文件夹, 如果想重命名：&lt;code&gt;mv teampage-source your-desired-name&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;进入源码文件夹 &lt;code&gt;cd your-desired-name&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安装Gemfiles里面包含的dependency &lt;code&gt;sudo bundle install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;创建build文件夹 &lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt; &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git remote add https://github.com/nekokami/nekokami.github.io.git&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git pull origin master&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cd ..&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;环境设置到此为止&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id="blogging"&gt;- 开始Blogging&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;在middleman源码的目录下 &lt;code&gt;middleman article "Your blog title" --lang cn&lt;/code&gt; 此处可以是cn, en或者是ja&lt;/li&gt;
  &lt;li&gt;在source/cn下找到your-blog-title.html.markdown文件&lt;/li&gt;
  &lt;li&gt;
    &lt;pre&gt;&lt;code&gt;---
title: Middleman 教程
date: 2014-01-12 00:41 UTC
lang: cn &amp;lt;-在这里加入一行表示语言
tags:
---

####我是Title, 4号字

从这里开始Blogging, 这里是blog的正文
遵循Markdown标签的书写规则, 具体请参照
[点我](http://wowubuntu.com/markdown/)
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;保存文件, 并且在middleman的源码目录下&lt;code&gt;middleman build&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;build通过了自后&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;提交修改 &lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Commit &lt;code&gt;git commit -m "your message"&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;向Server Push &lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;大功告成&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="section"&gt;- 后记&lt;/h4&gt;

&lt;p&gt;对于没有学过编程的人来说，这些步骤可能是比较复杂。但是就常规的Blogging Routing来说，其实一共只有8个Command. 下次，将介绍如何批量执行linux command. 另外&lt;a href="http://wowubuntu.com/markdown/"&gt;Markdown&lt;/a&gt; 是一个很常用的标签语言。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>We are finally here</title>
    <link rel="alternate" href="/ja/2014/01/11/we-are-finally-here.html"/>
    <id>/ja/2014/01/11/we-are-finally-here.html</id>
    <published>2014-01-11T00:46:00Z</published>
    <updated>2014-01-11T00:46:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;h4 id="intro"&gt;Intro&lt;/h4&gt;
&lt;p&gt;After almost a month, our team finally get to release our first version of &lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt;, of which the meaning in Japanese Language is &lt;strong&gt;“Let’s go voting”&lt;/strong&gt;. Me and Mr. N both has more than 5 years of web developing experience, with multipule languages...&lt;/p&gt;</summary>
    <content type="html">&lt;h4 id="intro"&gt;Intro&lt;/h4&gt;
&lt;p&gt;After almost a month, our team finally get to release our first version of &lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt;, of which the meaning in Japanese Language is &lt;strong&gt;“Let’s go voting”&lt;/strong&gt;. Me and Mr. N both has more than 5 years of web developing experience, with multipule languages and frameworks like &lt;strong&gt;Django&lt;/strong&gt;, &lt;strong&gt;Rails&lt;/strong&gt;, etc. And this time we wanted something different.&lt;/p&gt;

&lt;h4 id="what"&gt;What&lt;/h4&gt;
&lt;p&gt;The website, &lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt; aims to expand the awareness of Japanese people ( Or people of anyother democracy country ) on voting, by showing support rate of particular senator or political issue &lt;strong&gt;real time&lt;/strong&gt;, making it more efficient for people to catch the current situation.&lt;/p&gt;

&lt;h4 id="the-system"&gt;The system&lt;/h4&gt;
&lt;p&gt;To handle the heavy traffic and the need of realtime websocket processing, we found the currently popular nodejs handy to our needs, with a few obvious flaws:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Readability of Javascript Code is just horriable&lt;/li&gt;
  &lt;li&gt;Callback Hell&lt;/li&gt;
  &lt;li&gt;Memory Leaking issue sometimes happen		&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and it’s obvious merits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Javascript on both ends makes it faster to develop&lt;/li&gt;
  &lt;li&gt;Rich resource to explore on npm&lt;/li&gt;
  &lt;li&gt;Native support of websocket&lt;/li&gt;
  &lt;li&gt;Native Async processing of request&lt;/li&gt;
  &lt;li&gt;Easy to port to mobile with the same code base&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="dharma"&gt;Dharma&lt;/h4&gt;

&lt;p&gt;Dharma is what we made, with &lt;a href="http://backbonejs.org"&gt;backbone.js&lt;/a&gt; and &lt;a href="http://underscorejs.org"&gt;underscore.js&lt;/a&gt; to handle &lt;a href="http://en.wikipedia.org/wiki/Stateless_protocol"&gt;stateless&lt;/a&gt; front-end, with user login, click events, modules and so on. It will ease people’s way of creating &lt;a href="http://en.wikipedia.org/wiki/Stateless_protocol"&gt;stateless&lt;/a&gt; websites. It is also very light, so that it’ll also be handy while creating &lt;strong&gt;mobile applications&lt;/strong&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>你好，Github</title>
    <link rel="alternate" href="/cn/2014/01/11/we-are-finally-here.html"/>
    <id>/cn/2014/01/11/we-are-finally-here.html</id>
    <published>2014-01-11T00:45:00Z</published>
    <updated>2014-01-11T00:45:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;h4 id="section"&gt;起&lt;/h4&gt;
&lt;p&gt;在将近一个月的努力之后，我们终于释出了&lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt;的第一个版本。&lt;strong&gt;“Senkyoyarou”&lt;/strong&gt;, 在日文中的含义是“大家一起参与选举吧！” (当然，还有一些其他意思，你懂的)。我和N先生大概都在这个IT业界呆了超过五年了，我们之前曾经接触过不少语言和框架，比如 &lt;strong&gt;Django&lt;/strong&gt;, &lt;strong&gt;Rails&lt;/strong&gt; 等等。但是，这次我们打算尝试一些新的东西。&lt;/p&gt;

&lt;h4 id="section-1"&gt;这是啥&lt;/h4&gt;
&lt;p&gt;一切都起源于上海的一个小酒吧里，在大约午夜11点半的时候，我和N先生打了个赌，说如果谁输了的话，就把负责做这个网站的前端( 不过事后...&lt;/p&gt;</summary>
    <content type="html">&lt;h4 id="section"&gt;起&lt;/h4&gt;
&lt;p&gt;在将近一个月的努力之后，我们终于释出了&lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt;的第一个版本。&lt;strong&gt;“Senkyoyarou”&lt;/strong&gt;, 在日文中的含义是“大家一起参与选举吧！” (当然，还有一些其他意思，你懂的)。我和N先生大概都在这个IT业界呆了超过五年了，我们之前曾经接触过不少语言和框架，比如 &lt;strong&gt;Django&lt;/strong&gt;, &lt;strong&gt;Rails&lt;/strong&gt; 等等。但是，这次我们打算尝试一些新的东西。&lt;/p&gt;

&lt;h4 id="section-1"&gt;这是啥&lt;/h4&gt;
&lt;p&gt;一切都起源于上海的一个小酒吧里，在大约午夜11点半的时候，我和N先生打了个赌，说如果谁输了的话，就把负责做这个网站的前端( 不过事后发现前后端都不简单 )。这个网站的目的在于 通过 &lt;strong&gt;实时显示&lt;/strong&gt; 政治家以及政治事件的支持率的方式 &lt;strong&gt;唤醒&lt;/strong&gt; 日本人民 (或者其它任何民主国家之人民)的选举意识。我们相信，通过互联网，人们对于政治家的认知度将有一个很大的提升。&lt;/p&gt;

&lt;h4 id="section-2"&gt;系统&lt;/h4&gt;
&lt;p&gt;为了处理可能会到来的流量和实时的Web Socket接口，我们发现正在流行的NodeJS可能会对我们有一些帮助，不过使用NodeJS带来的问题也是很明显的:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;代码的可读性相当糟糕&lt;/li&gt;
  &lt;li&gt;回调函数地狱&lt;/li&gt;
  &lt;li&gt;在Javascript的世界里，内存泄露是时常发生的&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，NodeJS也有其好处:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用Javascript在前后端开发都相当的迅捷&lt;/li&gt;
  &lt;li&gt;在NPM上有大量资源可以使用&lt;/li&gt;
  &lt;li&gt;直接支持Websocket&lt;/li&gt;
  &lt;li&gt;直接的异步数据请求处理&lt;/li&gt;
  &lt;li&gt;可移植性很高&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="section-3"&gt;达摩&lt;/h4&gt;
&lt;p&gt;那么，达摩就是我们用&lt;a href="http://backbonejs.org"&gt;backbone.js&lt;/a&gt; 和 &lt;a href="http://underscorejs.org"&gt;underscore.js&lt;/a&gt;，搭建出来，用于处理纯API，&lt;a href="http://zh.wikipedia.org/wiki/%E6%97%A0%E7%8A%B6%E6%80%81%E5%8D%8F%E8%AE%AE"&gt;无状态&lt;/a&gt;式的网站架构的一个微型框架。这个框架非常小，所以我们认为在手机应用的开发上也应该相当好用。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>We are finally here</title>
    <link rel="alternate" href="/en/2014/01/11/we-are-finally-here.html"/>
    <id>/en/2014/01/11/we-are-finally-here.html</id>
    <published>2014-01-11T00:04:00Z</published>
    <updated>2014-01-11T00:04:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;h4 id="intro"&gt;Intro&lt;/h4&gt;
&lt;p&gt;After almost a month, our team finally get to release our first version of &lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt;, of which the meaning in Japanese Language is &lt;strong&gt;“Let’s go voting”&lt;/strong&gt;. Me and Mr. N both has more than 5 years of web developing experience, with multipule languages...&lt;/p&gt;</summary>
    <content type="html">&lt;h4 id="intro"&gt;Intro&lt;/h4&gt;
&lt;p&gt;After almost a month, our team finally get to release our first version of &lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt;, of which the meaning in Japanese Language is &lt;strong&gt;“Let’s go voting”&lt;/strong&gt;. Me and Mr. N both has more than 5 years of web developing experience, with multipule languages and frameworks like &lt;strong&gt;Django&lt;/strong&gt;, &lt;strong&gt;Rails&lt;/strong&gt;, etc. And this time we wanted something different.&lt;/p&gt;

&lt;h4 id="what"&gt;What&lt;/h4&gt;
&lt;p&gt;The website, &lt;a href="http://senkyoyarou.com"&gt;Senkyoyarou.com&lt;/a&gt; aims to expand the awareness of Japanese people ( Or people of anyother democracy country ) on voting, by showing support rate of particular senator or political issue &lt;strong&gt;real time&lt;/strong&gt;, making it more efficient for people to catch the current situation.&lt;/p&gt;

&lt;h4 id="the-system"&gt;The system&lt;/h4&gt;
&lt;p&gt;To handle the heavy traffic and the need of realtime websocket processing, we found the currently popular nodejs handy to our needs, with a few obvious flaws:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Readability of Javascript Code is just horriable&lt;/li&gt;
  &lt;li&gt;Callback Hell&lt;/li&gt;
  &lt;li&gt;Memory Leaking issue sometimes happen		&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and it’s obvious merits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Javascript on both ends makes it faster to develop&lt;/li&gt;
  &lt;li&gt;Rich resource to explore on npm&lt;/li&gt;
  &lt;li&gt;Native support of websocket&lt;/li&gt;
  &lt;li&gt;Native Async processing of request&lt;/li&gt;
  &lt;li&gt;Easy to port to mobile with the same code base&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="dharma"&gt;Dharma&lt;/h4&gt;

&lt;p&gt;Dharma is what we made, with &lt;a href="http://backbonejs.org"&gt;backbone.js&lt;/a&gt; and &lt;a href="http://underscorejs.org"&gt;underscore.js&lt;/a&gt; to handle &lt;a href="http://en.wikipedia.org/wiki/Stateless_protocol"&gt;stateless&lt;/a&gt; front-end, with user login, click events, modules and so on. It will ease people’s way of creating &lt;a href="http://en.wikipedia.org/wiki/Stateless_protocol"&gt;stateless&lt;/a&gt; websites. It is also very light, so that it’ll also be handy while creating &lt;strong&gt;mobile applications&lt;/strong&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>

<footer>
<p>&copy; 2011-2014 Dharma-n.io</p>
</footer>
</div>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript"></script>
<script>
  //<![CDATA[
    window.jQuery || document.write('<script src="/javascripts/libs/jquery-1.8.3.min.js"><\/script>')
  //]]>
</script>
<script src="/javascripts/plugins.js" type="text/javascript"></script>
<script src="/javascripts/script.js" type="text/javascript"></script>
<script src="/javascripts/bootstrap.js" type="text/javascript"></script>
<script src="/javascripts/highlight.pack.js" type="text/javascript"></script>
<link href="/stylesheets/solarized_light.css" media="screen" rel="stylesheet" type="text/css" />
<script>hljs.initHighlightingOnLoad();</script>
<!-- :javascript -->
<!-- var _gaq=[['_setAccount','UA-XXXXX-X'],['_trackPageview']]; -->
<!-- (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0]; -->
<!-- g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js'; -->
<!-- s.parentNode.insertBefore(g,s)}(document,'script')); -->
</body>
